[package]
edition = "2021"
name = "cyber_grape_embedded"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = { version = "0.2.5", features = ["unproven"] }

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# Yes having this pull directly from Git is ugly but it makes all the errors
# print out without a big hassle since they implemeneted Debug/Format on all
# the errors pretty recently. If they push a release to crates.io we can go
# back to that.
rp-pico = { git = "https://github.com/rp-rs/rp-hal-boards.git", rev = "3fdd613" } # We're using a Pico by default on this template
panic-halt = "0.2.0"

# Maybe we can get an allocator working
talc = { version = "4.3.1", features = ["lock_api"], default-features = false }
lock_api = "0.4.11"
nb = { version = "1.1.0", features = ["defmt-0-3"] }


[lib]
name = "cg"


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
